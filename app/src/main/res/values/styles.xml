<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="actionBarStyle">@style/ActionBar.Dark</item>
        <item name="android:windowBackground">@android:color/white</item>
        <item name="android:textColorPrimary">@color/primary_text</item>
        <item name="android:textColorSecondary">@color/secondary_text</item>
        <item name="android:dialogTheme">@style/DialogTheme</item>
        <item name="popupTheme">@style/ThemeOverlay.AppCompat.Light</item>
    </style>

    <!--dialogTheme-->
    <style name="DialogTheme" parent="Theme.AppCompat.Light.Dialog">
        <item name="colorPrimary">?colorPrimary</item>
        <item name="colorPrimaryDark">?colorPrimaryDark</item>
        <item name="colorAccent">?colorAccent</item>
    </style>


    <style name="ActionBar.Dark" parent="Theme.AppCompat.Light.DarkActionBar" >
        <item name="background">?colorPrimary</item>
        <item name="displayOptions">showTitle</item>
        <item name="height">?actionBarSize</item>
    </style>


    <!-- CircularImageView Custom Styling -->
    <declare-styleable name="CircularImageView">
        <!-- Whether or not to draw a circular border around the image. -->
        <attr name="civ_border" format="boolean"/>
        <!-- The color of the border draw around the image. (if enabled) -->
        <attr name="civ_borderColor" format="color"/>
        <!-- Makes the border this pixels wide. (if enabled) -->
        <attr name="civ_borderWidth" format="dimension"/>
        <!-- Whether or not to draw a selector on this view upon touch events. -->
        <attr name="civ_selector" format="boolean"/>
        <!-- The color of the selector draw on top of the image upon touch events. (if enabled) -->
        <attr name="civ_selectorColor" format="color"/>
        <!-- The color of the selector stroke drawn around the image upon touch events. Be sure to provide some opacity. (if enabled) -->
        <attr name="civ_selectorStrokeColor" format="color"/>
        <!-- The selector stroke drawn around the image upon touch events this pixels wide. (if enabled) -->
        <attr name="civ_selectorStrokeWidth" format="dimension"/>
        <!-- Whether or not to draw a shadow around your circular image. -->
        <attr name="civ_shadow" format="boolean"/>
        <!-- The radius for the shadow to extend to. (if enabled) -->
        <attr name="civ_shadowRadius" format="float"/>
        <!-- Horizontal shadow offset. (if enabled) -->
        <attr name="civ_shadowDx" format="float"/>
        <!-- Vertical shadow offset. (if enabled) -->
        <attr name="civ_shadowDy" format="float"/>
        <!-- The color of the shadow drawn around your circular image. (if enabled) -->
        <attr name="civ_shadowColor" format="color"/>
    </declare-styleable>

    <declare-styleable name="CircularImageViewStyle">
        <attr name="circularImageViewDefault" format="reference"/>
    </declare-styleable>


    <!--MaterialCheckBox Custom Styling-->
    <declare-styleable name="MaterialCheckBox">
        <attr name="checkbox_color" format="color"/>
        <attr name="checkbox_checked_color" format="color"/>
    </declare-styleable>

    <style name="FileViewOperationButtonStyle">
        <item name="android:layout_height">wrap_content</item>
        <item name="android:gravity">center</item>
        <item name="android:layout_centerVertical">true</item>
        <item name="android:padding">10dp</item>
        <item name="android:layout_width">0dp</item>
    </style>


    <style name="BottomButtonBar">
       <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">50dp</item>
        <item name="android:layout_marginTop">12dp</item>
        <item name="android:gravity">bottom</item>
        <item name="android:orientation">horizontal</item>
    </style>
    <style name="BottomButtonStyle">
        <item name="android:layout_width">0dp</item>
        <item name="android:layout_height">fill_parent</item>
        <item name="android:layout_weight">1</item>
    </style>
</resources>
